export PATH=$HOME/.cargo/bin:$HOME/.nodebrew/current/bin:$HOME/.local/bin:$HOME/bin:$PATH
export MANPATH=$MANPATH

export RUBYOPT=rubygems

export GOPATH="$HOME/go"
export PATH=$PATH:"$GOPATH/bin"

export PATH="/Applications/Visual Studio Code.app/Contents/Resources/app/bin:$PATH"

export WASMTIME_HOME="$HOME/.wasmtime"
export PATH="$WASMTIME_HOME/bin:$PATH"

HISTFILE=$HOME/.zsh_history
HISTSIZE=50000
SAVEHIST=10000
bindkey -e
setopt extended_glob
setopt hist_expire_dups_first
setopt hist_ignore_all_dups
setopt hist_ignore_space
setopt hist_save_no_dups
setopt inc_append_history
setopt prompt_subst
unsetopt BEEP

# Prompt {{{
# Concepts:
# - Normal operation should not change the input start position.
# - Special operations (e.g., changing users) should change the input start position.
# - When recording the contents of the terminal display by copying and pasting, the recorded
#   contents should not depend on the window size.
PROMPT_LOCATION_INFO='%B%m:%~%b'
PROMPT_MAIN='%B%n[%D{%H:%M}]%#%b '
PROMPT=$'\n'"${PROMPT_LOCATION_INFO}"$'\n'"${PROMPT_MAIN}"

# }}}
# Fuzzy finder {{{
export FZF_DEFAULT_OPTS="--height=40% --layout=reverse --info=inline --border --margin=1 --padding=1"

which ghq > /dev/null && FZF_REPO="$(ghq root)/github.com/junegunn/fzf"

# Auto-completion
# ---------------
[[ -n "${FZF_REPO}" && $- == *i* ]] && source "${FZF_REPO}/shell/completion.zsh" 2> /dev/null

# Key bindings
# ------------
[[ -n "${FZF_REPO}" ]] && source "${FZF_REPO}/shell/key-bindings.zsh"

# }}}
# Custom functions {{{
cd-repo() {
  REPO_NAME="$(ghq list | fzf)"
  [[ -n "${REPO_NAME}" ]] && cd "$(ghq root)/${REPO_NAME}"
}

code-repo() {
  REPO_NAME="$(ghq list | fzf)"
  [[ -n "${REPO_NAME}" ]] && code "$(ghq root)/${REPO_NAME}"
}

ru-json-diff() {
  diff -u <(cutruhead "$1" | jq .) <(cutruhead "$2" | jq .)
}

ru-geojson-featurecollection-length() {
  cutruhead "$1" | jq '.features | length'
}

stock-get() {
  (
    set -e
    if [ $# != 5 ]; then
      return 1
    fi

    local bucket_name="$1"
    local tagid="$2"
    local date="$3"
    local time_pat="$4"
    local out_dir="$5"

    if [ ${#tagid} != 9 ]; then
      return 1
    fi
    if [ ${#date} != 8 ]; then
      return 1
    fi

    local year="${date:0:4}"
    local month="${date:4:2}"
    local day="${date:6:2}"
    local prefix="s3://${bucket_name}/${tagid}/${year}/${month}/${day}/"

    echo "aws s3 ls ${prefix} | awk '{print \$4;}' | grep '${date}${time_pat}'" 1>&2
    aws s3 ls "${prefix}" | awk '{print $4;}' | grep "${date}${time_pat}" | while IFS= read -r item; do
      aws s3 cp "${prefix}${item}" "${out_dir}"
    done
  )
}

connect-intra() {
  trap "networksetup -setsocksfirewallproxystate Wi-Fi off; exit" 1 2 3 15
  networksetup -setsocksfirewallproxystate Wi-Fi on
  ssh -N tunnel
  networksetup -setsocksfirewallproxystate Wi-Fi off
}
# }}}
# Custom key bindings {{{
# Backward killing for paths/URLs.
tcsh-backward-delete-word () {
  local WORDCHARS="${WORDCHARS:s#/#}"
  zle backward-delete-word
}

zle -N tcsh-backward-delete-word
bindkey '^W' tcsh-backward-delete-word

# }}}
# Completions {{{
fpath+=~/.zfunc
autoload -U compinit
compinit

# }}}
# vim: set filetype=zsh foldmethod=marker foldlevel=0 :
